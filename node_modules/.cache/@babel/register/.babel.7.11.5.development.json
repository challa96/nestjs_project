{
  "{\"sourceRoot\":\"/home/jazeera/test_kumar/nest_graphql_ex/\",\"caller\":{\"name\":\"@babel/node\"},\"cwd\":\"/home/jazeera/test_kumar/nest_graphql_ex\",\"filename\":\"/home/jazeera/test_kumar/nest_graphql_ex/index.js\",\"cloneInputAst\":true,\"babelrc\":false,\"configFile\":false,\"passPerPreset\":false,\"envName\":\"development\",\"root\":\"/home/jazeera/test_kumar/nest_graphql_ex\",\"plugins\":[{\"key\":\"syntax-numeric-separator\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-logical-assignment-operators\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"AssignmentExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-nullish-coalescing-operator\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"LogicalExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-optional-chaining\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"OptionalCallExpression\":{\"enter\":[null]},\"OptionalMemberExpression\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-json-strings\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-optional-catch-binding\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-async-generators\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"syntax-object-rest-spread\",\"visitor\":{},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-export-namespace-from\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"ExportNamedDeclaration\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"transform-modules-commonjs\",\"visitor\":{\"CallExpression\":{\"enter\":[null]},\"Program\":{\"exit\":[null]},\"_exploded\":true,\"_verified\":true},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}},{\"key\":\"proposal-dynamic-import\",\"visitor\":{\"_exploded\":{},\"_verified\":{},\"Program\":{\"enter\":[null]}},\"options\":{\"spec\":false,\"loose\":false,\"useBuiltIns\":false}}],\"presets\":[]}:7.11.5": {
    "metadata": {},
    "options": {
      "sourceRoot": "/home/jazeera/test_kumar/nest_graphql_ex/",
      "caller": {
        "name": "@babel/node"
      },
      "cwd": "/home/jazeera/test_kumar/nest_graphql_ex",
      "filename": "/home/jazeera/test_kumar/nest_graphql_ex/index.js",
      "cloneInputAst": true,
      "babelrc": false,
      "configFile": false,
      "envName": "development",
      "root": "/home/jazeera/test_kumar/nest_graphql_ex",
      "sourceMaps": "both",
      "ast": false,
      "passPerPreset": false,
      "plugins": [
        {
          "key": "syntax-numeric-separator",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-logical-assignment-operators",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "AssignmentExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-nullish-coalescing-operator",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "LogicalExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-optional-chaining",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "OptionalCallExpression": {
              "enter": [
                null
              ]
            },
            "OptionalMemberExpression": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-json-strings",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-optional-catch-binding",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-async-generators",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "syntax-object-rest-spread",
          "visitor": {
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-export-namespace-from",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "ExportNamedDeclaration": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "transform-modules-commonjs",
          "visitor": {
            "CallExpression": {
              "enter": [
                null
              ]
            },
            "Program": {
              "exit": [
                null
              ]
            },
            "_exploded": true,
            "_verified": true
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        },
        {
          "key": "proposal-dynamic-import",
          "visitor": {
            "_exploded": {},
            "_verified": {},
            "Program": {
              "enter": [
                null
              ]
            }
          },
          "options": {
            "spec": false,
            "loose": false,
            "useBuiltIns": false
          }
        }
      ],
      "presets": [],
      "parserOpts": {
        "sourceType": "module",
        "sourceFileName": "/home/jazeera/test_kumar/nest_graphql_ex/index.js",
        "plugins": [
          "numericSeparator",
          "logicalAssignment",
          "nullishCoalescingOperator",
          "optionalChaining",
          "jsonStrings",
          "optionalCatchBinding",
          "asyncGenerators",
          "objectRestSpread",
          "exportNamespaceFrom",
          "dynamicImport"
        ]
      },
      "generatorOpts": {
        "filename": "/home/jazeera/test_kumar/nest_graphql_ex/index.js",
        "comments": true,
        "compact": "auto",
        "sourceMaps": "both",
        "sourceRoot": "/home/jazeera/test_kumar/nest_graphql_ex/",
        "sourceFileName": "index.js"
      }
    },
    "ast": null,
    "code": "\"use strict\";\n\nvar _graphqlTag = _interopRequireDefault(require(\"graphql-tag\"));\n\nvar _express = _interopRequireDefault(require(\"express\"));\n\nvar _apolloServerExpress = require(\"apollo-server-express\");\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nconst port = process.env.PORT || 8080; // Define APIs using GraphQL SDL\n\nconst typeDefs = (0, _graphqlTag.default)`\n   type Query {\n       sayHello(name: String!): String!\n   }\n\n   type Mutation {\n       sayHello(name: String!): String!\n   }\n`; // Define resolvers map for API definitions in SDL\n\nconst resolvers = {\n  Query: {\n    sayHello: (obj, args, context, info) => {\n      return `Hello ${args.name}!`;\n    }\n  },\n  Mutation: {\n    sayHello: (obj, args, context, info) => {\n      return `Hello ${args.name}!`;\n    }\n  }\n}; // Configure express\n\nconst app = (0, _express.default)(); // Build GraphQL schema based on SDL definitions and resolvers maps\n\nconst schema = (0, _apolloServerExpress.makeExecutableSchema)({\n  typeDefs,\n  resolvers\n}); // Build Apollo server\n\nconst apolloServer = new _apolloServerExpress.ApolloServer({\n  schema\n});\napolloServer.applyMiddleware({\n  app\n}); // Run server\n\napp.listen({\n  port\n}, () => {\n  console.log(`ðŸš€Server ready at http://localhost:${port}${apolloServer.graphqlPath}`);\n});\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImluZGV4LmpzIl0sIm5hbWVzIjpbInBvcnQiLCJwcm9jZXNzIiwiZW52IiwiUE9SVCIsInR5cGVEZWZzIiwicmVzb2x2ZXJzIiwiUXVlcnkiLCJzYXlIZWxsbyIsIm9iaiIsImFyZ3MiLCJjb250ZXh0IiwiaW5mbyIsIm5hbWUiLCJNdXRhdGlvbiIsImFwcCIsInNjaGVtYSIsImFwb2xsb1NlcnZlciIsIkFwb2xsb1NlcnZlciIsImFwcGx5TWlkZGxld2FyZSIsImxpc3RlbiIsImNvbnNvbGUiLCJsb2ciLCJncmFwaHFsUGF0aCJdLCJtYXBwaW5ncyI6Ijs7QUFBQTs7QUFDQTs7QUFDQTs7OztBQUVBLE1BQU1BLElBQUksR0FBR0MsT0FBTyxDQUFDQyxHQUFSLENBQVlDLElBQVosSUFBb0IsSUFBakMsQyxDQUVBOztBQUNBLE1BQU1DLFFBQVEsR0FBRyx3QkFBSTs7Ozs7Ozs7Q0FBckIsQyxDQVVBOztBQUNBLE1BQU1DLFNBQVMsR0FBRztBQUNmQyxFQUFBQSxLQUFLLEVBQUU7QUFDSEMsSUFBQUEsUUFBUSxFQUFFLENBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxPQUFaLEVBQXFCQyxJQUFyQixLQUE4QjtBQUNwQyxhQUFRLFNBQVNGLElBQUksQ0FBQ0csSUFBTSxHQUE1QjtBQUNIO0FBSEUsR0FEUTtBQU9mQyxFQUFBQSxRQUFRLEVBQUU7QUFDTk4sSUFBQUEsUUFBUSxFQUFFLENBQUNDLEdBQUQsRUFBTUMsSUFBTixFQUFZQyxPQUFaLEVBQXFCQyxJQUFyQixLQUE4QjtBQUNwQyxhQUFRLFNBQVNGLElBQUksQ0FBQ0csSUFBTSxHQUE1QjtBQUNIO0FBSEs7QUFQSyxDQUFsQixDLENBY0E7O0FBQ0EsTUFBTUUsR0FBRyxHQUFHLHVCQUFaLEMsQ0FFQTs7QUFDQSxNQUFNQyxNQUFNLEdBQUcsK0NBQXFCO0FBQUVYLEVBQUFBLFFBQUY7QUFBWUMsRUFBQUE7QUFBWixDQUFyQixDQUFmLEMsQ0FFQTs7QUFDQSxNQUFNVyxZQUFZLEdBQUcsSUFBSUMsaUNBQUosQ0FBaUI7QUFBRUYsRUFBQUE7QUFBRixDQUFqQixDQUFyQjtBQUNBQyxZQUFZLENBQUNFLGVBQWIsQ0FBNkI7QUFBRUosRUFBQUE7QUFBRixDQUE3QixFLENBRUE7O0FBQ0FBLEdBQUcsQ0FBQ0ssTUFBSixDQUFXO0FBQUVuQixFQUFBQTtBQUFGLENBQVgsRUFBcUIsTUFBTTtBQUN4Qm9CLEVBQUFBLE9BQU8sQ0FBQ0MsR0FBUixDQUFhLHNDQUFzQ3JCLElBQU0sR0FBR2dCLFlBQVksQ0FBQ00sV0FBYSxFQUF0RjtBQUNGLENBRkQiLCJzb3VyY2VSb290IjoiL2hvbWUvamF6ZWVyYS90ZXN0X2t1bWFyL25lc3RfZ3JhcGhxbF9leC8iLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgZ3FsIGZyb20gJ2dyYXBocWwtdGFnJztcbmltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHsgQXBvbGxvU2VydmVyLCBtYWtlRXhlY3V0YWJsZVNjaGVtYSB9IGZyb20gJ2Fwb2xsby1zZXJ2ZXItZXhwcmVzcyc7XG5cbmNvbnN0IHBvcnQgPSBwcm9jZXNzLmVudi5QT1JUIHx8IDgwODA7XG5cbi8vIERlZmluZSBBUElzIHVzaW5nIEdyYXBoUUwgU0RMXG5jb25zdCB0eXBlRGVmcyA9IGdxbGBcbiAgIHR5cGUgUXVlcnkge1xuICAgICAgIHNheUhlbGxvKG5hbWU6IFN0cmluZyEpOiBTdHJpbmchXG4gICB9XG5cbiAgIHR5cGUgTXV0YXRpb24ge1xuICAgICAgIHNheUhlbGxvKG5hbWU6IFN0cmluZyEpOiBTdHJpbmchXG4gICB9XG5gO1xuXG4vLyBEZWZpbmUgcmVzb2x2ZXJzIG1hcCBmb3IgQVBJIGRlZmluaXRpb25zIGluIFNETFxuY29uc3QgcmVzb2x2ZXJzID0ge1xuICAgUXVlcnk6IHtcbiAgICAgICBzYXlIZWxsbzogKG9iaiwgYXJncywgY29udGV4dCwgaW5mbykgPT4ge1xuICAgICAgICAgICByZXR1cm4gYEhlbGxvICR7IGFyZ3MubmFtZSB9IWA7XG4gICAgICAgfVxuICAgfSxcblxuICAgTXV0YXRpb246IHtcbiAgICAgICBzYXlIZWxsbzogKG9iaiwgYXJncywgY29udGV4dCwgaW5mbykgPT4ge1xuICAgICAgICAgICByZXR1cm4gYEhlbGxvICR7IGFyZ3MubmFtZSB9IWA7XG4gICAgICAgfVxuICAgfVxufTtcblxuLy8gQ29uZmlndXJlIGV4cHJlc3NcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcblxuLy8gQnVpbGQgR3JhcGhRTCBzY2hlbWEgYmFzZWQgb24gU0RMIGRlZmluaXRpb25zIGFuZCByZXNvbHZlcnMgbWFwc1xuY29uc3Qgc2NoZW1hID0gbWFrZUV4ZWN1dGFibGVTY2hlbWEoeyB0eXBlRGVmcywgcmVzb2x2ZXJzIH0pO1xuXG4vLyBCdWlsZCBBcG9sbG8gc2VydmVyXG5jb25zdCBhcG9sbG9TZXJ2ZXIgPSBuZXcgQXBvbGxvU2VydmVyKHsgc2NoZW1hIH0pO1xuYXBvbGxvU2VydmVyLmFwcGx5TWlkZGxld2FyZSh7IGFwcCB9KTtcblxuLy8gUnVuIHNlcnZlclxuYXBwLmxpc3Rlbih7IHBvcnQgfSwgKCkgPT4ge1xuICAgY29uc29sZS5sb2coYPCfmoBTZXJ2ZXIgcmVhZHkgYXQgaHR0cDovL2xvY2FsaG9zdDokeyBwb3J0IH0keyBhcG9sbG9TZXJ2ZXIuZ3JhcGhxbFBhdGggfWApO1xufSk7XG4iXX0=",
    "map": {
      "version": 3,
      "sources": [
        "index.js"
      ],
      "names": [
        "port",
        "process",
        "env",
        "PORT",
        "typeDefs",
        "resolvers",
        "Query",
        "sayHello",
        "obj",
        "args",
        "context",
        "info",
        "name",
        "Mutation",
        "app",
        "schema",
        "apolloServer",
        "ApolloServer",
        "applyMiddleware",
        "listen",
        "console",
        "log",
        "graphqlPath"
      ],
      "mappings": ";;AAAA;;AACA;;AACA;;;;AAEA,MAAMA,IAAI,GAAGC,OAAO,CAACC,GAAR,CAAYC,IAAZ,IAAoB,IAAjC,C,CAEA;;AACA,MAAMC,QAAQ,GAAG,wBAAI;;;;;;;;CAArB,C,CAUA;;AACA,MAAMC,SAAS,GAAG;AACfC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE,CAACC,GAAD,EAAMC,IAAN,EAAYC,OAAZ,EAAqBC,IAArB,KAA8B;AACpC,aAAQ,SAASF,IAAI,CAACG,IAAM,GAA5B;AACH;AAHE,GADQ;AAOfC,EAAAA,QAAQ,EAAE;AACNN,IAAAA,QAAQ,EAAE,CAACC,GAAD,EAAMC,IAAN,EAAYC,OAAZ,EAAqBC,IAArB,KAA8B;AACpC,aAAQ,SAASF,IAAI,CAACG,IAAM,GAA5B;AACH;AAHK;AAPK,CAAlB,C,CAcA;;AACA,MAAME,GAAG,GAAG,uBAAZ,C,CAEA;;AACA,MAAMC,MAAM,GAAG,+CAAqB;AAAEX,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAArB,CAAf,C,CAEA;;AACA,MAAMW,YAAY,GAAG,IAAIC,iCAAJ,CAAiB;AAAEF,EAAAA;AAAF,CAAjB,CAArB;AACAC,YAAY,CAACE,eAAb,CAA6B;AAAEJ,EAAAA;AAAF,CAA7B,E,CAEA;;AACAA,GAAG,CAACK,MAAJ,CAAW;AAAEnB,EAAAA;AAAF,CAAX,EAAqB,MAAM;AACxBoB,EAAAA,OAAO,CAACC,GAAR,CAAa,sCAAsCrB,IAAM,GAAGgB,YAAY,CAACM,WAAa,EAAtF;AACF,CAFD",
      "sourceRoot": "/home/jazeera/test_kumar/nest_graphql_ex/",
      "sourcesContent": [
        "import gql from 'graphql-tag';\nimport express from 'express';\nimport { ApolloServer, makeExecutableSchema } from 'apollo-server-express';\n\nconst port = process.env.PORT || 8080;\n\n// Define APIs using GraphQL SDL\nconst typeDefs = gql`\n   type Query {\n       sayHello(name: String!): String!\n   }\n\n   type Mutation {\n       sayHello(name: String!): String!\n   }\n`;\n\n// Define resolvers map for API definitions in SDL\nconst resolvers = {\n   Query: {\n       sayHello: (obj, args, context, info) => {\n           return `Hello ${ args.name }!`;\n       }\n   },\n\n   Mutation: {\n       sayHello: (obj, args, context, info) => {\n           return `Hello ${ args.name }!`;\n       }\n   }\n};\n\n// Configure express\nconst app = express();\n\n// Build GraphQL schema based on SDL definitions and resolvers maps\nconst schema = makeExecutableSchema({ typeDefs, resolvers });\n\n// Build Apollo server\nconst apolloServer = new ApolloServer({ schema });\napolloServer.applyMiddleware({ app });\n\n// Run server\napp.listen({ port }, () => {\n   console.log(`ðŸš€Server ready at http://localhost:${ port }${ apolloServer.graphqlPath }`);\n});\n"
      ]
    },
    "sourceType": "script",
    "mtime": 1598944111210
  }
}